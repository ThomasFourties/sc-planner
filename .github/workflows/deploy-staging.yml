name: Deploy to Staging Server

on:
  push:
    branches:
      - dev

jobs:
  changes:
    name: üîç Detect Changes
    runs-on: ubuntu-22.04
    outputs:
      client: ${{ steps.filter.outputs.client }}
      server: ${{ steps.filter.outputs.server }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.before }}
          filters: |
            client:
              - 'client/**'
              - '.github/workflows/**'
            server:
              - 'server/**'
              - '.github/workflows/**'

  test:
    name: üß™ Test Server
    needs: changes
    if: ${{ fromJSON(needs.changes.outputs.server) }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install server dependencies
        run: |
          cd server
          npm install
      - name: Run tests
        run: |
          cd server
          npm run test

  build:
    name: üöÄ Build & Push Images
    needs: changes
    if: ${{ fromJSON(needs.changes.outputs.client) || fromJSON(needs.changes.outputs.server) }}
    runs-on: ubuntu-22.04
    outputs:
      sha_short: ${{ steps.short_sha.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üî¢ Extract short SHA
        id: short_sha
        run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: üõ†Ô∏è Build & Push Client
        if: ${{ fromJSON(needs.changes.outputs.client) }}
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          no-cache: true
          tags: thoomaas123/sc-planner-client:staging-${{ steps.short_sha.outputs.sha_short }}

      - name: üõ†Ô∏è Build & Push Server
        if: ${{ fromJSON(needs.changes.outputs.server) }}
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          no-cache: true
          tags: thoomaas123/sc-planner-server:staging-${{ steps.short_sha.outputs.sha_short }}

  deploy:
    name: üöö Deploy to Staging
    needs: [changes, build]
    if: |
      always() &&
      !cancelled() &&
      !failure() &&
      (fromJSON(needs.changes.outputs.client) || fromJSON(needs.changes.outputs.server))
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üîê SSH & Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          password: ${{ secrets.STAGING_PASSWORD }}
          port: 22
          script: |
            cd /var/www/vhosts/thomasfourties.fr/staging.sc-planner.thomasfourties.fr
            eval $(ssh-agent) && ssh-add ~/.ssh/thomas
            git checkout .
            git pull origin dev

            export TAG=staging-${{ needs.build.outputs.sha_short }}

            export CLIENT_TAG=$TAG
            export SERVER_TAG=$TAG

            sed -i "s|image: thoomaas123/sc-planner-client:.*|image: thoomaas123/sc-planner-client:$TAG|" docker-compose.staging.yml
            sed -i "s|image: thoomaas123/sc-planner-server:.*|image: thoomaas123/sc-planner-server:$TAG|" docker-compose.staging.yml

            docker-compose -f docker-compose.staging.yml pull
            docker-compose -f docker-compose.staging.yml up -d --remove-orphans

            docker image ls --format "{{.Repository}}:{{.Tag}}" | grep "^thoomaas123/sc-planner" | grep -v "$TAG" | xargs -r docker rmi -f

            docker image prune -a -f
            docker volume prune -f
