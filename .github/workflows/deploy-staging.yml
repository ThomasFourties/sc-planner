name: Deploy to Staging

on:
  push:
    branches:
    - dev

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-22.04
    outputs:
      client: ${{ steps.changes.outputs.client }}
      server: ${{ steps.changes.outputs.server }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        base: ${{ github.event.before }}
        filters: |
          client:
            - 'client/**'
            - '.github/workflows/main.yml'
          server:
            - 'server/**'
            - '.github/workflows/main.yml'

  client:
    name: Build and Push Client
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true' }}
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get latest Git tag
      id: git_tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "Latest tag: $LATEST_TAG"

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        logout: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: '{{defaultContext}}:client'
        push: true
        tags: |
          thoomaas123/sc-planner-client:staging
          thoomaas123/sc-planner-client:staging-${{ github.sha }}

  server:
    name: Build and Push Server
    needs: changes
    if: ${{ needs.changes.outputs.server == 'true' }}
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get latest Git tag
      id: git_tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "Latest tag: $LATEST_TAG"

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        logout: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: '{{defaultContext}}:server'
        push: true
        tags: |
          thoomaas123/sc-planner-server:staging
          thoomaas123/sc-planner-server:staging-${{ github.sha }}

  deploy:
    name: Deploy to Staging Server
    needs: [ client, server ]
    if: |
      always() && !failure() && !cancelled()
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: SSH to staging server and deploy
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.STAGING_SERVER_HOST }}
        username: ${{ secrets.STAGING_SERVER_USERNAME }}
        password: ${{ secrets.STAGING_SERVER_PASSWORD }}
        port: 22
        script: |
          cd /var/www/staging/sc-planner
          git pull origin dev
          docker-compose -f docker-compose.staging.yml down
          docker-compose -f docker-compose.staging.yml up -d
          docker volume prune -f
          docker image prune -f
