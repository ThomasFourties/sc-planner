name: Docker Build and Push

on:
  push:
    branches:
      - prod

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-22.04
    outputs:
      client: ${{ steps.changes.outputs.client }}
      server: ${{ steps.changes.outputs.server }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.event.before }}
          filters: |
            client:
              - 'client/**'
              - '.github/workflows/main.yml'
            server:
              - 'server/**'
              - '.github/workflows/main.yml'

  client:
    name: Build and Push Client
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:client'
          push: true
          tags: thoomaas123/sc-planner-client

  server:
    name: Build and Push Server
    needs: changes
    if: ${{ needs.changes.outputs.server == 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:server'
          push: true
          tags: thoomaas123/sc-planner-server

  deploy:
    name: Deploy to Server
    needs: [client, server]
    if: |
      always() && !failure() && !cancelled()
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            cd /var/www/vhosts/thomasfourties.fr/sc-planner.thomasfourties.fr
            eval $(ssh-agent) ssh-add ~/.ssh/thomas
            git fetch
            git checkout nouvelle-branche
            git pull origin nouvelle-branche

            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
