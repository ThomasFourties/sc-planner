name: Release to Production

on:
  push:
    tags:
      - v*

jobs:
  build-and-deploy:
    name: üöÄ Build & Deploy Prod
    runs-on: ubuntu-22.04
    env:
      VERSION_TAG: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: üõ†Ô∏è Build & Push Client
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          tags: |
            thoomaas123/sc-planner-client:${{ env.VERSION_TAG }}
            thoomaas123/sc-planner-client:latest
          no-cache: true

      - name: üõ†Ô∏è Build & Push Server
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          tags: |
            thoomaas123/sc-planner-server:${{ env.VERSION_TAG }}
            thoomaas123/sc-planner-server:latest
          no-cache: true

      - name: üîê SSH & Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          port: 22
          script: |
            cd /var/www/vhosts/thomasfourties.fr/sc-planner.thomasfourties.fr
            eval $(ssh-agent) && ssh-add ~/.ssh/thomas
            git checkout .
            git pull origin master

            export TAG=${{ env.VERSION_TAG }}

            sed -i "s|image: thoomaas123/sc-planner-client:.*|image: thoomaas123/sc-planner-client:$TAG|" docker-compose.prod.yml
            sed -i "s|image: thoomaas123/sc-planner-server:.*|image: thoomaas123/sc-planner-server:$TAG|" docker-compose.prod.yml

            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            docker image prune -a -f
            docker volume prune -f
