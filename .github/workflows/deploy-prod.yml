name: Deploy to Production Server

on:
  push:
    branches:
      - master

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-22.04
    outputs:
      client: ${{ steps.changes.outputs.client }}
      server: ${{ steps.changes.outputs.server }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.event.before }}
          filters: |
            client:
              - 'client/**'
              - '.github/workflows/**'
            server:
              - 'server/**'
              - '.github/workflows/**'

  build:
    name: Build and Push Images
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true' || needs.changes.outputs.server == 'true' }}
    runs-on: ubuntu-22.04
    outputs:
      git_tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Git tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build and push Client
        if: ${{ needs.changes.outputs.client == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:client'
          push: true
          tags: |
            thoomaas123/sc-planner-client:latest
            ${{ steps.get_tag.outputs.tag && format('thoomaas123/sc-planner-client:{0}', steps.get_tag.outputs.tag) }}

      - name: Build and push Server
        if: ${{ needs.changes.outputs.server == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:server'
          push: true
          tags: |
            thoomaas123/sc-planner-server:latest
            ${{ steps.get_tag.outputs.tag && format('thoomaas123/sc-planner-server:{0}', steps.get_tag.outputs.tag) }}

  deploy:
    name: Deploy to Production Server
    needs: build
    if: always() && !failure() && !cancelled()
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: SSH to production server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            cd /var/www/vhosts/thomasfourties.fr/sc-planner.thomasfourties.fr
            eval $(ssh-agent) && ssh-add ~/.ssh/thomas
            git pull origin master

            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            docker image prune -a