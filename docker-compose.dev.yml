services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    image: sc-planner/client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    env_file:
      - ./.env
    command: npm run dev
    depends_on:
      - server

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    image: sc-planner/server
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - '3002:3002'
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    depends_on:
      - database

  database:
    image: postgres:13
    ports:
      - '5432:5432'
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - _database:/var/lib/postgresql/data

  database-test:
    image: postgres:13
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: sc-planner-db-test
    volumes:
      - _database-test:/var/lib/postgresql/data

volumes:
  _database:
  _database-test:
